x
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
bl <- min(which(interp$Udash >= 0.99 * max(interp$Udash[!is.na(interp$Udash)])))
b;
bl
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
thickness
x = xvec[3]
# Find the interpolations
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.99 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
bl
x = xvec[4]
x
# Find the interpolations
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.99 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
surf
bl
x
x = xvec[5]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.99 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
x = xvec[6]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.99 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
# Find the interpolations
x = xvec[7]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.99 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
# Find the interpolations
x = xvec[8]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.99 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
ggplot(interp) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
ggplot(interp) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,0.2)
ggplot(interp) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,0.5)
bl <- min(which(interp$Udash >= 0.90 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
bl <- min(which(interp$Udash >= 0.95 * max(interp$Udash[!is.na(interp$Udash)])))
bl <- min(which(interp$Udash >= 0.95 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
bl <- min(which(interp$Udash >= 0.97 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
bl <- min(which(interp$Udash >= 0.99 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
x = xvec[9]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
x
ggplot(interp[1:50,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
x = xvec[10]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
ggplot(interp[1:50,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
x = xvec[11]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
blggplotoverlay <- ggplot()
blggplotoverlay + geom_point(data = interp[1:bl,], aes(x = Udash/Um, y = dist, colour = x))
interp[1:bl,]
x
blggplotoverlay <-  blggplotoverlay +
geom_point(data = interp[1:bl,], aes(x = Udash/Um, y = dist, colour = get(x)))
blggplotoverlay <-  blggplotoverlay +
geom_point(data = interp[1:bl,], aes(x = Udash/Um, y = dist, colour = get(x)))
blggplotoverlay
blggplotoverlay <- ggplot()
blggplotoverlay <-  blggplotoverlay +
geom_point(data = interp[1:bl,], aes(x = Udash/Um, y = dist, colour = get(x)))
blggplotoverlay
ggplot() + geom_point(data = interp[1:bl,], aes(x = Udash/Um, y = dist, colour = x[1]))
blggplotoverlay <- ggplot()
x = xvec[1]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
blggplotoverlay <-  blggplotoverlay +
geom_point(data = interp[1:bl,], aes(x = Udash/Um, y = dist, colour = x[1]))
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
blggplotoverlay
x = xvec[2]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
blggplotoverlay <-  blggplotoverlay +
geom_point(data = interp[1:bl,], aes(x = Udash/Um, y = dist, colour = x[1]))
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
blggplotoverlay
surf = "lower"
blggplotoverlay <- ggplot()
for (x in xvec) {
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
blggplotoverlay <-  blggplotoverlay +
geom_point(data = interp[1:bl,], aes(x = Udash/Um, y = dist, colour = x[1]))
# # Find the thicknesses
# # This assumes an integral that extends all the way to infinity
# # Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
# thickness <- interp[1:bl,] %>%
#   mutate(Ur = Udash / interp$Udash[bl]) %>%
#   mutate(dispth = 1 - Ur,
#          mometh = Ur*(1 - Ur),
#          kineth = Ur*(1 - (Ur)^2)) %>%
#   select(dist, dispth, mometh, kineth) %>%
#   mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
#          mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
#          kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
# thickness <- thickness[2:nrow(thickness),]
print(bl)
}
blggplotoverlay
asdfL <- BLValues(omesh, xvec, surf = "lower")
asdfLL <- BLLong(asdfL)
BLValues <- function(omesh, xvec, surf = "upper") {
# Apply a function across each x in xvec
interpval <- pblapply(xvec, function(x) {
# Find the interpolations
x = xvec[11]
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
print(bl)
# Return in a list in a list
list(
# summary
summary = data.frame(
xO = interp$x[1], surf = surf, AoA, Re,
distbl = interp$dist[bl], xbl = interp$x[bl], ybl = interp$y[bl], ubl = interp$Udash[bl],
dispth = sum(thickness$dispth), mometh = sum(thickness$mometh), kineth = sum(thickness$kineth)),
# interpolation
interp = interp
)
})
return(interpval)
}
BLLong <- function(interpval, out = "BL") {
interpvalLs = data.frame()
interpvalLi = data.frame()
for (i in (1:length(interpval))) {
interpvalLs = rbind(
interpvalLs,
interpval[[i]]$summary
)
interpvalLi = rbind(
interpvalLi,
interpval[[i]]$interp
)
}
return(list(summary = interpvalLs, interp = interpvalLi))
}
asdfL <- BLValues(omesh, xvec, surf = "lower")
BLValues <- function(omesh, xvec, surf = "upper") {
# Apply a function across each x in xvec
interpval <- pblapply(xvec, function(x) {
# Find the interpolations
interp <- InterpPerpLine(omesh, x, AoA = AoA, surf = surf)
# Find the row for max
bl <- min(which(interp$Udash >= 0.98 * max(interp$Udash[!is.na(interp$Udash)])))
# ggplot(interp[1:bl,]) + geom_point(aes(x = Udash/Um, y = dist)) + ylim(0,NA)
# Find the thicknesses
# This assumes an integral that extends all the way to infinity
# Alternatively, Ur = U / U(BL) and sum from 0 to dist(bl)
thickness <- interp[1:bl,] %>%
mutate(Ur = Udash / interp$Udash[bl]) %>%
mutate(dispth = 1 - Ur,
mometh = Ur*(1 - Ur),
kineth = Ur*(1 - (Ur)^2)) %>%
select(dist, dispth, mometh, kineth) %>%
mutate(dispth = 1/2 * (dispth + lag(dispth,1)) * (dist - lag(dist,1)),
mometh = 1/2 * (mometh + lag(mometh,1)) * (dist - lag(dist,1)),
kineth = 1/2 * (kineth + lag(kineth,1)) * (dist - lag(dist,1)))
thickness <- thickness[2:nrow(thickness),]
# Return in a list in a list
list(
# summary
summary = data.frame(
xO = interp$x[1], surf = surf, AoA, Re,
distbl = interp$dist[bl], xbl = interp$x[bl], ybl = interp$y[bl], ubl = interp$Udash[bl],
dispth = sum(thickness$dispth), mometh = sum(thickness$mometh), kineth = sum(thickness$kineth)),
# interpolation
interp = interp
)
})
return(interpval)
}
asdfL <- BLValues(omesh, xvec, surf = "lower")
asdfLL <- BLLong(asdfL)
asdfL <- asdfLL
asdfbl <- filter(asdfL$summary, dispth > 0)
xmin = min(c(asdfbl$xbl, airfoilcoord$x))
xmax = max(c(asdfbl$xbl, airfoilcoord$x))
ymin = min(c(asdfbl$ybl, airfoilcoord$y))
ymax = max(c(asdfbl$ybl, airfoilcoord$y))
ggplot() +
geom_path(data = asdfbl, aes(x = xbl, y = ybl)) +
geom_point(data = asdfL$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfL$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfL$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(xmin, xmax) +
ylim(ymin, ymax) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
source('C:/Users/Alwin/Documents/GitHub/MAE3401-Viper-Airfoil-Visualisation/Viper-Airfoil-Visualisation-App/Rough Boundary Layer.R', echo=TRUE)
ggplot () +
geom_point(data = asdfL$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfL$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfL$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(-1.2, 0.8) +
ylim(-0.8, 0.8) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
asdfL = cbind(asdfU, asdfL)
# Plot of U' i.e. perp to the normal from the airfoil
ggplot () +
geom_point(data = asdfL$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfL$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfL$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(-1.2, 0.8) +
ylim(-0.8, 0.8) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
head(asdfUL)
asdfLong = cbind(asdfU, asdfL)
asdfLong
asdfUL
asdfUL <- BLLong(asdfU)
asdfUL
rm(asdfUL)
rm(asdfL)
rm(asdfLL)
rm(asdfLong)
asdfUL <- BLLong(asdfU)
asdfL <- BLValues(omesh, xvec, surf = "lower")
asdfLL <- BLLong(asdfL)
asdfLong = list(
summary = rbind(asdfUL$summary, asdfLL$summary),
interp = rbind(asdfUL$interp, asdfLL$interp)
)
ggplot () +
geom_point(data = asdfL$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfL$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfL$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(-1.2, 0.8) +
ylim(-0.8, 0.8) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
ggplot () +
geom_point(data = asdfL$interp, aes(x = x, y = y, colour = Udash))
ggplot () +
geom_point(data = asdfLong$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfLong$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfLong$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(-1.2, 0.8) +
ylim(-0.8, 0.8) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
# BL PLOT
asdfbl <- filter(asdfLong$summary, dispth > 0)
xmin = min(c(asdfbl$xbl, airfoilcoord$x))
xmax = max(c(asdfbl$xbl, airfoilcoord$x))
ymin = min(c(asdfbl$ybl, airfoilcoord$y))
ymax = max(c(asdfbl$ybl, airfoilcoord$y))
ggplot() +
geom_path(data = asdfbl, aes(x = xbl, y = ybl)) +
geom_point(data = asdfLong$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfLong$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfLong$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(xmin, xmax) +
ylim(ymin, ymax) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
source('C:/Users/Alwin/Documents/GitHub/MAE3401-Viper-Airfoil-Visualisation/Viper-Airfoil-Visualisation-App/Rough Boundary Layer.R', echo=TRUE)
ggplot() +
geom_path(data = asdfbl, aes(x = xbl, y = ybl)) +
geom_point(data = asdfLong$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfLong$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfLong$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(-1, 1) +
ylim(-1, 1) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
ggplot() +
geom_path(data = asdfbl, aes(x = xbl, y = ybl), size = 2) +
geom_point(data = asdfLong$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfLong$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfLong$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(xmin, xmax) +
ylim(ymin, ymax) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
ggplot() +
geom_path(data = asdfbl, aes(x = xbl, y = ybl), size = 2) +
geom_point(data = asdfLong$interp, aes(x = x, y = y, colour = Udash)) +
geom_point(data = filter(asdfLong$interp, Udash < -1.2), aes(x = x, y = y, colour = Udash), colour = "#BE2828") +
geom_point(data = filter(asdfLong$interp, Udash > 1.2), aes(x = x, y = y, colour = Udash), colour = "#3C4BA0") +
geom_path(data = airfoilcoord, aes(x = x, y = y), size = 1.2) +
xlim(-1, 1) +
ylim(-1, 1) +
scale_colour_gradientn("U'", colours = brewer.pal(11, "RdYlBu"), limits = c(-1.2, 1.2)) +
coord_fixed()
ggplot() +
geom_path(data = asdfbl, aes(x = xbl, y = ybl), size = 2)
ggplot() +
geom_path(data = asdfbl, aes(x = xbl, y = ybl), size = 2)
source('C:/Users/Alwin/Documents/GitHub/MAE3401-Viper-Airfoil-Visualisation/Viper-Airfoil-Visualisation-App/Helper Install Packages.R', echo=TRUE)
ggplot() +
geom_path(data = asdfbl, aes(x = xbl, y = ybl), size = 2)
