rm(var)
rm(varname)
PlotAirfoilSurf <- function(var, min, max) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(var,
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max))
return(plot)
}
PlotAirfoilSurf("P", -20, 20)
PlotAirfoilSurf("P", -0.5, 0.5)
PlotAirfoilSurf("P", -0.1, 0.1)
source("Function Load Packages.R")
foldername = "Input_Data"
filelist <- list.files(foldername, pattern = "*.dat")
source("Function Load Data.R")
NACA = 4412
airfoildata <- LoadAirfoil(NACA, a = -0.5, c = 1)
source("Function pblapply.R")
saveplot = "Output_Plot"
savedata = "Output_Data"
logfile = paste0(format(Sys.time(), "%Y-%m-%dT%H.%M.%S"), ".txt") # logfile
finame = filelist[1]
list2env(threaddata, envir = environment())
omesh = filedata
source("Function Load Packages.R")      # For required packages
source("Function Plot.R")               # Plot settings and functions
source("Function Save Load.R")         # For saving and loading data
source("Function pblapply.R")           # For PrintThreadProgress
threadname <- ThreadName()
source("Function Load Data.R")          # For fn "Load File"
filedata <- LoadFile(filename, foldername)
list2env(filedata, envir = environment()); rm(filedata)       # N.B: local so must be passed as fn input
filename = filelist[1]
source("Function Load Data.R")          # For fn "Load File"
filedata <- LoadFile(filename, foldername)
list2env(filedata, envir = environment()); rm(filedata)       # N.B: local so must be passed as fn input
ThreadProgress(threadname, Re, AoA, "File Data Loaded
---------------------------------------------------------------")
source("Function Airfoil Profile.R")    # For fn "AirfoilCoord", etc
list2env(airfoildata, envir = .GlobalEnv)                     # N.B: global so all fn can find it
airfoilcoord <- AirfoilCoord(a, c + a, AoA, res = 100)
ThreadProgress(threadname, Re, AoA, "Airfoil Coordinates Calculated")
source("Function Interpolations.R")     # For fn "InterpPoint", etc
airfoilsurfmesh <- InterpPoint(omesh, airfoilcoord, varnames = c("P", "vort_xy_plane"))
ThreadProgress(threadname, Re, AoA, "Airfoil Surface Interpolation Calculated")
plot_airfoil_P = PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
plot_airfoil_vort = PlotAirfoilSurf(omesh, airfoilcoord, "vort_xy_plane", -20, 20, Re, AoA, "Vorticity")
plot_airfoil_P
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, title) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(var,
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = paste("Re Number", Re, "AoA",  paste0(AoA, "Â°C:"), title))
return(plot)
}
plot_airfoil_P = PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
plot_airfoil_vort = PlotAirfoilSurf(omesh, airfoilcoord, "vort_xy_plane", -20, 20, Re, AoA, "Vorticity")
plot_airfoil_P
expression(Blah[1*d]*"(%)")
plot_airfoil_P + labs(x = expression(Blah[1*d]*"(%)"))
plot_airfoil_P + labs(x = expression(paste("hi")*Blah[1*d]*"(%)"))
plot_airfoil_P + labs(x = expression(ID*Blah[1*d]*"(%)"))
?expression
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, title) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(title,
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = expression(paste("Re Number", Re, "AoA",  AoA)^o*paste(":"), title))
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, title) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA)^o : ~ .(var))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(title,
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
# labs(title = expression(paste("Re Number", Re, "AoA",  AoA)^o*paste(":"), title))
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA)^o : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(name,
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
# labs(title = expression(paste("Re Number", Re, "AoA",  AoA)^o*paste(":"), title))
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
?bquote
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA)^o : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA)(degree) : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA)degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA)(degree) : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) * degree *: ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) * degree *: ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) (*degree*): ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) (degree): ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree: ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) [degree] : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) ^degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
bquote(Re~Number~.(Re)~AoA~.(AoA) ^degree : ~ .(name))
bquote(Re~Number~.(Re)~AoA~.(AoA) ^degree :)
bquote(Re~Number~.(Re)~AoA~.(AoA) ^degree)
bquote(Re~Number~.(Re)~AoA~.(AoA) * degree)
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) ^degree ":" ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) ^degree paste(":") ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) ^degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
bquote(Re~Number~.(Re)~AoA~.(AoA) * degree)
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
Â°
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = "titleÂ°")
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
# title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = "titleÂ°")
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
ggsave(last_plot(), "test.png")
ggsave(last_plot(),filename =  "test.png")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
# title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = paste(Re "Â°"))
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
# title <- bquote(Re~Number~.(Re)~AoA~.(AoA) degree : ~ .(name))
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = paste(Re, "Â°"))
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
ggsave(last_plot(),filename =  "test.png")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
# title <- bquote(Re~Number~.(Re)~AoA~.(AoA) (degree): ~ .(name))
title <- paste("Re Number", Re, "AoA", AoA, "Â°:", name)
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = paste(Re, "Â°"))
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
# title <- bquote(Re~Number~.(Re)~AoA~.(AoA) (degree): ~ .(name))
title <- paste("Re Number", Re, "AoA", AoA, "Â°:", name)
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = paste(Re, "Â°"))
return(plot)
}
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
# title <- bquote(Re~Number~.(Re)~AoA~.(AoA) (degree): ~ .(name))
title <- paste("Re Number", Re, "AoA", AoA, "Â°:", name)
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
title <- paste("Re Number", Re, "AoA", paste(AoA, "Â°:", sep = ""), name)
PlotAirfoilSurf <- function(omesh, airfoilcoord, var, min, max, Re, AoA, name) {
aes_col <- gsub('var', var, 'ifelse(var < min, min, ifelse(var > max, max, var))')
# title <- bquote(Re~Number~.(Re)~AoA~.(AoA) (degree): ~ .(name))
title <- paste("Re Number", Re, "AoA", paste(AoA, "Â°:", sep = ""), name)
plot <-
ggplot(data = omesh, aes(x = x, y = y)) +
geom_point(data = omesh,
aes_string(colour = aes_col)) +
geom_polygon(data = airfoilcoord) +
coord_fixed(xlim = c(-1, 1), ylim = c(-1, 1)) +
scale_colour_gradientn(paste(name, "\n"),
colours = rev(brewer.pal(9, "RdYlBu")), limits = c(min, max)) +
labs(title = title)
return(plot)
}
PlotAirfoilSurf(omesh, airfoilcoord, "P", -0.2, 0.2, Re, AoA, "Pressure")
ggsave(last_plot(),filename = "test.png")
source('C:/Users/Alwin/Documents/GitHub/MAE3401-Viper-Airfoil-Visualisation/Viper-Airfoil-Visualisation-Batch-Runs/Rough Parallel Runs.R', echo=TRUE)
